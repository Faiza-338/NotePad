{"ast":null,"code":"var _jsxFileName = \"E:\\\\Notepad App\\\\notepad-frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport AddNote from './AddNote'; // Make sure the path is correct\nimport NoteList from './NoteList'; // Make sure the path is correct\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [notes, setNotes] = useState([]);\n  const [editingNote, setEditingNote] = useState(null);\n\n  // Fetch notes when the component is mounted\n  useEffect(() => {\n    fetchNotes();\n  }, []);\n\n  // Fetch notes from backend\n  const fetchNotes = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/notes');\n      setNotes(response.data); // Set notes from backend\n    } catch (error) {\n      console.error('Error fetching notes:', error);\n    }\n  };\n\n  // Handle adding a new note\n  const handleAddNote = async note => {\n    try {\n      await axios.post('http://localhost:5000/notes', note);\n      fetchNotes(); // Re-fetch notes after adding a new one\n    } catch (error) {\n      console.error('Error adding note:', error);\n    }\n  };\n\n  // Handle editing a note\n  const handleEditNote = note => {\n    setEditingNote(note);\n  };\n\n  // Handle updating a note\n  const handleUpdateNote = async note => {\n    try {\n      await axios.put(`http://localhost:5000/notes/${note.id}`, note);\n      fetchNotes(); // Re-fetch notes after updating\n      setEditingNote(null); // Clear editing state\n    } catch (error) {\n      console.error('Error updating note:', error);\n    }\n  };\n\n  // Handle deleting a note\n  const handleDeleteNote = async noteId => {\n    try {\n      await axios.delete(`http://localhost:5000/notes/${noteId}`);\n      fetchNotes(); // Re-fetch notes after deletion\n    } catch (error) {\n      console.error('Error deleting note:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Notepad App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddNote, {\n      onAddNote: handleAddNote,\n      editingNote: editingNote,\n      onUpdateNote: handleUpdateNote\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NoteList, {\n      notes: notes,\n      onEditNote: handleEditNote,\n      onDeleteNote: handleDeleteNote\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"5bsD+ByTf6hc2WOIoKCe/ZSUwLQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","AddNote","NoteList","jsxDEV","_jsxDEV","App","_s","notes","setNotes","editingNote","setEditingNote","fetchNotes","response","get","data","error","console","handleAddNote","note","post","handleEditNote","handleUpdateNote","put","id","handleDeleteNote","noteId","delete","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onAddNote","onUpdateNote","onEditNote","onDeleteNote","_c","$RefreshReg$"],"sources":["E:/Notepad App/notepad-frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport AddNote from './AddNote';  // Make sure the path is correct\nimport NoteList from './NoteList'; // Make sure the path is correct\n\nconst App = () => {\n  const [notes, setNotes] = useState([]);\n  const [editingNote, setEditingNote] = useState(null);\n\n  // Fetch notes when the component is mounted\n  useEffect(() => {\n    fetchNotes();\n  }, []);\n\n  // Fetch notes from backend\n  const fetchNotes = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/notes');\n      setNotes(response.data);  // Set notes from backend\n    } catch (error) {\n      console.error('Error fetching notes:', error);\n    }\n  };\n\n  // Handle adding a new note\n  const handleAddNote = async (note) => {\n    try {\n      await axios.post('http://localhost:5000/notes', note);\n      fetchNotes();  // Re-fetch notes after adding a new one\n    } catch (error) {\n      console.error('Error adding note:', error);\n    }\n  };\n\n  // Handle editing a note\n  const handleEditNote = (note) => {\n    setEditingNote(note);\n  };\n\n  // Handle updating a note\n  const handleUpdateNote = async (note) => {\n    try {\n      await axios.put(`http://localhost:5000/notes/${note.id}`, note);\n      fetchNotes();  // Re-fetch notes after updating\n      setEditingNote(null);  // Clear editing state\n    } catch (error) {\n      console.error('Error updating note:', error);\n    }\n  };\n\n  // Handle deleting a note\n  const handleDeleteNote = async (noteId) => {\n    try {\n      await axios.delete(`http://localhost:5000/notes/${noteId}`);\n      fetchNotes();  // Re-fetch notes after deletion\n    } catch (error) {\n      console.error('Error deleting note:', error);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Notepad App</h1>\n\n      {/* Pass the functions as props */}\n      <AddNote\n        onAddNote={handleAddNote}\n        editingNote={editingNote}\n        onUpdateNote={handleUpdateNote}\n      />\n\n      {/* Render the list of notes */}\n      <NoteList\n        notes={notes}\n        onEditNote={handleEditNote}\n        onDeleteNote={handleDeleteNote}\n      />\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}