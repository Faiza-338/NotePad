{"ast":null,"code":"var _jsxFileName = \"E:\\\\Notepad App\\\\notepad-frontend\\\\src\\\\AddNote.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddNote = ({\n  onAddNote,\n  editingNote,\n  onUpdateNote\n}) => {\n  _s();\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n\n  // If there's an editingNote, pre-fill the form with the note's data\n  useEffect(() => {\n    if (editingNote) {\n      setTitle(editingNote.title);\n      setContent(editingNote.content);\n    }\n  }, [editingNote]);\n  const handleSubmit = e => {\n    e.preventDefault();\n    const note = {\n      title,\n      content\n    };\n    if (editingNote) {\n      // If editing, update the note\n      onUpdateNote({\n        ...note,\n        id: editingNote.id\n      });\n    } else {\n      // If adding a new note\n      onAddNote(note);\n    }\n\n    // Clear the form after submission\n    setTitle('');\n    setContent('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Title\",\n      value: title,\n      onChange: e => setTitle(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      placeholder: \"Content\",\n      value: content,\n      onChange: e => setContent(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: editingNote ? 'Update Note' : 'Add Note'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(AddNote, \"s6xv9+LkBWArnjy8QFttJ7dFVj4=\");\n_c = AddNote;\nexport default AddNote;\nvar _c;\n$RefreshReg$(_c, \"AddNote\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","AddNote","onAddNote","editingNote","onUpdateNote","_s","title","setTitle","content","setContent","handleSubmit","e","preventDefault","note","id","onSubmit","children","type","placeholder","value","onChange","target","required","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/Notepad App/notepad-frontend/src/AddNote.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst AddNote = ({ onAddNote, editingNote, onUpdateNote }) => {\r\n  const [title, setTitle] = useState('');\r\n  const [content, setContent] = useState('');\r\n\r\n  // If there's an editingNote, pre-fill the form with the note's data\r\n  useEffect(() => {\r\n    if (editingNote) {\r\n      setTitle(editingNote.title);\r\n      setContent(editingNote.content);\r\n    }\r\n  }, [editingNote]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const note = { title, content };\r\n\r\n    if (editingNote) {\r\n      // If editing, update the note\r\n      onUpdateNote({ ...note, id: editingNote.id });\r\n    } else {\r\n      // If adding a new note\r\n      onAddNote(note);\r\n    }\r\n\r\n    // Clear the form after submission\r\n    setTitle('');\r\n    setContent('');\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Title\"\r\n        value={title}\r\n        onChange={(e) => setTitle(e.target.value)}\r\n        required\r\n      />\r\n      <textarea\r\n        placeholder=\"Content\"\r\n        value={content}\r\n        onChange={(e) => setContent(e.target.value)}\r\n        required\r\n      />\r\n      <button type=\"submit\">{editingNote ? 'Update Note' : 'Add Note'}</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AddNote;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,OAAO,GAAGA,CAAC;EAAEC,SAAS;EAAEC,WAAW;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EAC5D,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;;EAE1C;EACAC,SAAS,CAAC,MAAM;IACd,IAAIK,WAAW,EAAE;MACfI,QAAQ,CAACJ,WAAW,CAACG,KAAK,CAAC;MAC3BG,UAAU,CAACN,WAAW,CAACK,OAAO,CAAC;IACjC;EACF,CAAC,EAAE,CAACL,WAAW,CAAC,CAAC;EAEjB,MAAMO,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAMC,IAAI,GAAG;MAAEP,KAAK;MAAEE;IAAQ,CAAC;IAE/B,IAAIL,WAAW,EAAE;MACf;MACAC,YAAY,CAAC;QAAE,GAAGS,IAAI;QAAEC,EAAE,EAAEX,WAAW,CAACW;MAAG,CAAC,CAAC;IAC/C,CAAC,MAAM;MACL;MACAZ,SAAS,CAACW,IAAI,CAAC;IACjB;;IAEA;IACAN,QAAQ,CAAC,EAAE,CAAC;IACZE,UAAU,CAAC,EAAE,CAAC;EAChB,CAAC;EAED,oBACET,OAAA;IAAMe,QAAQ,EAAEL,YAAa;IAAAM,QAAA,gBAC3BhB,OAAA;MACEiB,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,OAAO;MACnBC,KAAK,EAAEb,KAAM;MACbc,QAAQ,EAAGT,CAAC,IAAKJ,QAAQ,CAACI,CAAC,CAACU,MAAM,CAACF,KAAK,CAAE;MAC1CG,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eACF1B,OAAA;MACEkB,WAAW,EAAC,SAAS;MACrBC,KAAK,EAAEX,OAAQ;MACfY,QAAQ,EAAGT,CAAC,IAAKF,UAAU,CAACE,CAAC,CAACU,MAAM,CAACF,KAAK,CAAE;MAC5CG,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eACF1B,OAAA;MAAQiB,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAEb,WAAW,GAAG,aAAa,GAAG;IAAU;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrE,CAAC;AAEX,CAAC;AAACrB,EAAA,CA/CIJ,OAAO;AAAA0B,EAAA,GAAP1B,OAAO;AAiDb,eAAeA,OAAO;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}